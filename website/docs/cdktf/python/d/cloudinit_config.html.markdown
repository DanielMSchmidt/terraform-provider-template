---
layout: "template"
page_title: "Template: cloudinit_multipart"
sidebar_current: "docs-template-datasource-cloudinit-config"
description: |-
  Renders a multi-part cloud-init config from source files.
---


<!-- Please do not edit this file, it is generated. -->
# template_cloudinit_config

Renders a [multipart MIME configuration](https://cloudinit.readthedocs.io/en/latest/topics/format.html#mime-multi-part-archive)
for use with [Cloud-init](https://cloudinit.readthedocs.io/).

Cloud-init is a commonly-used startup configuration utility for cloud compute
instances. It accepts configuration via provider-specific user data mechanisms,
such as `user_data` for Amazon EC2 instances. Multipart MIME is one of the
data formats it accepts. For more information, see
[User-Data Formats](https://cloudinit.readthedocs.io/en/latest/topics/format.html)
in the Cloud-init manual.

This is not a generalized utility for producing multipart MIME messages. Its
featureset is specialized for the features of cloud-init.

## Example Usage

```python
# Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Fn, Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.instance import Instance
from imports.template.data_template_cloudinit_config import DataTemplateCloudinitConfig
from imports.template.data_template_file import DataTemplateFile
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        script = DataTemplateFile(self, "script",
            template=Token.as_string(Fn.file("${path.module}/init.tpl")),
            vars={
                "consul_address": consul.private_ip
            }
        )
        config = DataTemplateCloudinitConfig(self, "config",
            base64_encode=True,
            gzip=True,
            part=[DataTemplateCloudinitConfigPart(
                content=Token.as_string(script.rendered),
                content_type="text/cloud-config",
                filename="init.cfg"
            ), DataTemplateCloudinitConfigPart(
                content="baz",
                content_type="text/x-shellscript"
            ), DataTemplateCloudinitConfigPart(
                content="ffbaz",
                content_type="text/x-shellscript"
            )
            ]
        )
        Instance(self, "web",
            ami="ami-d05e75b8",
            instance_type="t2.micro",
            user_data_base64=Token.as_string(config.rendered)
        )
```

## Argument Reference

The following arguments are supported:

* `gzip` - (Optional) Specify whether or not to gzip the rendered output. Defaults to `true`.

* `base64_encode` - (Optional) Base64 encoding of the rendered output. Defaults to `true`,
  and cannot be disabled if `gzip` is `true`.

* `part` - (Required) A nested block type which adds a file to the generated
  cloud-init configuration. Use multiple `part` blocks to specify multiple
  files, which will be included in order of declaration in the final MIME
  document.

Each `part` block expects the following arguments:

* `content` - (Required) Body content for the part.

* `filename` - (Optional) A filename to report in the header for the part.

* `content_type` - (Optional) A MIME-style content type to report in the header for the part.

* `merge_type` - (Optional) A value for the `X-Merge-Type` header of the part,
  to control [cloud-init merging behavior](https://cloudinit.readthedocs.io/en/latest/topics/merging.html).

## Attributes Reference

The following attributes are exported:

* `rendered` - The final rendered multi-part cloud-init config.

<!-- cache-key: cdktf-0.17.1 input-af9d37b3855119d18ff734678a56cb44a96b097821149cb7e0abc03866ea826b -->